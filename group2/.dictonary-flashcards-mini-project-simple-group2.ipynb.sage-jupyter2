{"backend_state":"init","connection_file":"/projects/0ddeade5-3577-4fe8-8cd6-8a0cb653428e/.local/share/jupyter/runtime/kernel-c270fa5d-fdbb-4376-9f16-8bc34bd2580d.json","kernel":"nlp_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"},"orig_nbformat":4},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"29372d","input":"guess = input('enter your guess')\n# or\nprompt = 'enter your guess'\nguess = input(prompt)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"419be7","input":"print(dict['key1'])","metadata":{"vscode":{"languageId":"plaintext"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4339aa","input":"print('PythOn'.lower())\nprint('python'.lower())\nprint('PythOn'.lower()=='python'.lower())","metadata":{"vscode":{"languageId":"plaintext"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4ec837","input":"","pos":45,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"52348d","input":"def func():\n    pass # pass just means there's nothing here - stops the code from breaking","metadata":{"vscode":{"languageId":"plaintext"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6224be","input":"val = ret()\nprint(val)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":38,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"856fa3","input":"counter = 0\ndef inc():\n    counter += 1\ninc()\ncounter","metadata":{"vscode":{"languageId":"plaintext"}},"pos":40,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"946025","input":"dict['key2'] = 'value2'\nprint(dict)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"94ee43","input":"guess = input()","metadata":{"vscode":{"languageId":"plaintext"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"955d2a","input":"def ret():\n    return 'Bananas'","metadata":{"vscode":{"languageId":"plaintext"}},"pos":36,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"98674c","input":"param('AI','CAMP')","metadata":{"vscode":{"languageId":"plaintext"}},"pos":34,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a33339","input":"del dict['key2']\nprint(dict)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ac405e","input":"def param(arg0, arg1):\n    print(arg0, arg1)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c68542","input":"print('counter value:', counter)","metadata":{"vscode":{"languageId":"plaintext"}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d2f23b","input":"guess = 'English is a good language'\nanswer = 'Python is the best language!'\nif guess == answer:\n    print('goood job! you got it right!')\nelse:\n    print('To bad. The answer was:', answer) # note: when the print function is given 2 inputs, it prints both seperated by a space","metadata":{"vscode":{"languageId":"plaintext"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"289986","input":"dict = {'key0':'value0', 'key1':'value1', 'key2':'value2'}","metadata":{"vscode":{"languageId":"plaintext"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"6a2766","input":"dict = {'hello':'annyeonghaseyo', 'whatsup':'wascheuaeb'}","metadata":{"vscode":{"languageId":"plaintext"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"f952aa","input":"flashcards = {\"hi\":\"bonjour\", \"bye\":\"au revoir\"}\n\nfor key, value in flashcards.items():\n    print(key)\n    guess = input('Enter your guess: ')\n    v1 = guess\n    v2 = value\nflashcards\n","metadata":{"cocalc":{"outputs":{"1":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"bonjour"},"3":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"au revoir"}}},"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"hi\n"},"1":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"bonjour"},"2":{"name":"stdout","output_type":"stream","text":"bye\n"},"3":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"au revoir"},"4":{"data":{"text/plain":"{'hi': 'bonjour', 'bye': 'au revoir'}"},"exec_count":1,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"202b12","input":"flashcards = {\"hi\":\"bonjour\", \"bye\":\"au revoir\"}\ncounter = 0\n\nfor key, value in flashcards.items():\n    print(key)\n    guess = input('Enter your guess: ')\n    v1 = guess.lower()\n    v2 = value\n    if v1 == v2:\n        print(\"Nice!\")\n        counter = counter + 1\n        print(\"Total Score: \", counter)\n    else:\n        print(\"Wrong, the answer is \", v2)\n\n#def param(BONJOUR, bonjour, AU REVOIR, au revoir):","metadata":{"cocalc":{"outputs":{"1":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"BONJOUR"},"3":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"AU REVOIR"}}},"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"hi\n"},"1":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"BONJOUR"},"2":{"name":"stdout","output_type":"stream","text":"Nice!\nTotal Score:  1\nbye\n"},"3":{"name":"input","opts":{"password":false,"prompt":"Enter your guess: "},"output_type":"stream","value":"AU REVOIR"},"4":{"name":"stdout","output_type":"stream","text":"Nice!\nTotal Score:  2\n"}},"pos":44,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"1002f6","input":"flashcards = {\"hi\":\"bonjour\", \"bye\":\"au revoir\"}","metadata":{"vscode":{"languageId":"plaintext"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"05a2e2","input":"for key, value in flashcards.items():\n    print(key,\":\",value)","metadata":{"vscode":{"languageId":"plaintext"}},"output":{"0":{"name":"stdout","output_type":"stream","text":"hi : bonjour\nbye : au revoir\n"}},"pos":16,"type":"cell"}
{"cell_type":"markdown","id":"00005b","input":"<h3>The Flashcards</h3>","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"0646d7","input":"If you have a variable, you can also increment it in a function, like this","pos":39,"type":"cell"}
{"cell_type":"markdown","id":"0b7b06","input":"We can compare our guess with the answer using an if else block","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"217ea3","input":"When we have this dictionary, we can run through it with a for loop like this:\n\n","pos":15,"type":"cell"}
{"cell_type":"markdown","id":"268466","input":"This value can then be accessed as follows: (If you use parameters, the value can change based on the situation)\n\n","pos":37,"type":"cell"}
{"cell_type":"markdown","id":"269df1","input":"And finally, we can remove an entry like this:","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"2a2500","input":"Additionally, a function can hand back a value using a return statement","pos":35,"type":"cell"}
{"cell_type":"markdown","id":"303096","input":"when your piece works, add the code check(v1,v2) to the end of your loop (where v1 is the name of your guess variable, and v2 is the name of the answer)","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"36c1b0","input":"Now make a dictionary of the flashcards (name it flashcards so other code syncs together) (the definition should be the key)\n\n","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"3de94b","input":"But what if our user enters 'Python' and we wanted 'python' or the other way around? to do this, we make the cases match:","pos":27,"type":"cell"}
{"cell_type":"markdown","id":"4da5d2","input":"Then print it like this\n\n","pos":41,"type":"cell"}
{"cell_type":"markdown","id":"4f0b18","input":"Now put this all together: (if you want to use return, you can work to integrate it with your team)","pos":43,"type":"cell"}
{"cell_type":"markdown","id":"4f1bf6","input":"<h1>Validating guesses</h1>","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"6169b3","input":"Notice the curly braces, which denote a dictionary, and the colon, which pairs the key and the value. The values paired together can be anything.\n\nThis pairing allows us to access the value like this (and we can print with the print() statement):","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"695889","input":"Then we can call it like this:","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"9f102e","input":"Now you can put it together to make the loop:","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"a83186","input":"In python, we can create a dictionary like this:","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"afba7e","input":"For this section, we will be creating the game loop. To do that, we need a dictionary. A sample of that is supplied here (make sure to run the next cell, but you don't need to do anything with it)","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"c7dbd3","input":"A function can also take in parameters (the number isn't limited):","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"cff209","input":"<h1>Flash Card Mini Project</h1>\nThis is a project covering a range of python topics, from storage to functions. This lets you define flashcards, then test your knowledge against them.\n\nThis project is broken into 3 parts. The first covers creating and storing the flashcards, the second covers creating the loop, and the third covers validating the input","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"d7029f","input":"This loops through each pair in the dictionary, saving the key to the variable key, and the value to the variable value\n\nNow that we have the keys, we can collect the user's guess using the input function and assign the result to a variable\n\n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"dc144c","input":"Aditionally, we can add an entry like this:","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"f4f54c","input":"To make this easier, we can package this all into a function, which we can define as follows:","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"f8855a","input":"But how will the student know what to write? To adress this, the input function allows us to give a prompt\n\n","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"fadff7","input":"<h1>Running the loop</h1>\n\n","pos":12,"type":"cell"}
{"id":0,"time":1654708506703,"type":"user"}
{"last_load":1654708505719,"type":"file"}